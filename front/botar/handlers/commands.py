# handlers/commands.py
from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

router = Router()

@router.message(Command("speaker"))
async def speaker_command(message: Message, state: FSMContext):
    print('Speaker')
    data = await state.get_data()
    print(data)
    if data.get("speaker"):
        await message.answer("–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ —Å–ø–∏–∫–µ—Ä. –ü–µ—Ä–µ—Ö–æ–∂—É –≤ –º–µ–Ω—é —Å–ø–∏–∫–µ—Ä–∞...")
        from handlers.speaker import show_speaker_menu
        await show_speaker_menu(message, state)
    else:
        await message.answer("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ —Å–ø–∏–∫–µ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ /start –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å '–°–ø–∏–∫–µ—Ä üé§' –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.")

@router.message(Command("companion"))
async def companion_command(message: Message, state: FSMContext):
    data = await state.get_data()
    if data.get("teacher") and data.get("projects"):
        from handlers.chaperone import show_chaperone_menu
        await show_chaperone_menu(message, state)
    else:
        await message.answer("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é—â–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ /start –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å '–°–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é—â–∏–π üßë‚Äçüè´' –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.")

@router.message(Command("help"))
async def help_command(message: Message):
    await message.answer("–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É +7 (777) 777 77-77 –¥–æ–± 7777")

@router.message(Command("start"))
async def start_cmd(message: Message):
    await message.answer("–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å.")
